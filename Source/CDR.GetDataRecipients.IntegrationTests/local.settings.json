// Settings required to run these Azure functions in docker-compose.GetDataRecipients.IntegrationTests stack
// See docker-compose.IntegrationTests.yml where this file is volume mapped over the existing CDR.GetDataRecipients local.settings.json file
{
  "IsEncrypted": false,
  "Values": {
    // "AzureWebJobsStorage": "UseDevelopmentStorage=true",
    "AzureWebJobsStorage": "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;",
    // "StorageConnectionString": "UseDevelopmentStorage=true",
    "StorageConnectionString": "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;",
    "FUNCTIONS_WORKER_RUNTIME": "dotnet",
    "Schedule": "0-59 * * * *",
    // "DataHolder_DB_ConnectionString": "Server=(localdb)\\MSSQLLocalDB;Database=cdr-mdh;Integrated Security=true",
    "DataHolder_DB_ConnectionString": "Server=mssql;Database=cdr-mdh;User Id='SA';Password='Pa{}w0rd2019';MultipleActiveResultSets=True;TrustServerCertificate=True",
    // "DataHolder_Logging_DB_ConnectionString": "Server=(localdb)\\MSSQLLocalDB;Database=cdr-mdh;Integrated Security=true",
    "DataHolder_Logging_DB_ConnectionString": "Server=mssql;Database=cdr-mdh;User Id='SA';Password='Pa{}w0rd2019';MultipleActiveResultSets=True;TrustServerCertificate=True",
    // "Register_GetDataRecipients_Endpoint": "https://localhost:7000/cdr-register/v1/all/data-recipients",
    "Register_GetDataRecipients_Endpoint": "https://mock-register:7000/cdr-register/v1/all/data-recipients",
    "Register_GetDataRecipients_XV": "3",
    // "Ignore_Server_Certificate_Errors": "false"
    "Ignore_Server_Certificate_Errors": "true"
  },
  "Host": {
    "LocalHttpPort": 7074,
    "CORS": "*",
    "CORSCredentials": false
  }
}