version: '3.8'

services:
  mssql:
    container_name: sql1
    image: 'mcr.microsoft.com/mssql/server:2019-latest'
    ports: 
      - "1433:1433"
      - "9933:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pa{}w0rd2019
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S . -U sa -P "Pa{}w0rd2019" -Q "SELECT 1" || exit 1 
      timeout: 5s
      interval: 5s
      retries: 50     

  mock-register:
    container_name: mock-register
    image: mock-register
    hostname: mock-register
    ports: 
      - "7000:7000"
      - "7001:7001"
      - "7006:7006"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    volumes:
      - "./_temp/mock-register/tmp:/tmp"      
    healthcheck:
      test: test -f /app/admin/_healthcheck_ready || exit 1
      timeout: 5s
      interval: 5s
      retries: 50
    depends_on:
      mssql:
        condition: service_healthy      

  mock-data-holder:
    container_name: mock-data-holder
    image: mock-data-holder
    hostname: mock-data-holder
    ports: 
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8005:8005"
    build:
      context: .
      dockerfile: Dockerfile.for-testing
      # dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    volumes:
      - "./_temp/mock-data-holder/tmp:/tmp"      
    healthcheck:
      test: test -f /app/manage/_healthcheck_ready || exit 1
      timeout: 5s
      interval: 5s
      retries: 50    
    depends_on:
      mssql:
        condition: service_healthy
      mock-register:
        condition: service_healthy        

  azurite:
    container_name: azurite
    hostname: azurite
    image: 'mcr.microsoft.com/azure-storage/azurite'
    ports:
      - '10000:10000'
      - '10001:10001'
      - '10002:10002'
    # healthcheck: # FIXME - MJS

  getdatarecipients:
    container_name: getdatarecipients
    image: getdatarecipients
    hostname: getdatarecipients
    build:
      context: .
      dockerfile: Dockerfile.get-data-recipients
    ports:
      - "7074:7074"
    volumes:
      # use test specific local.settings.json
      # - ./CDR.GetDataRecipients.IntegrationTests/local.settings.json:/src/CDR.GetDataRecipients/local.settings.json
      - ./CDR.GetDataRecipients.IntegrationTests/local.settings.json:/src/CDR.GetDataRecipients/bin/Debug/net6.0/local.settings.json
    #  healthcheck: # FIXME - MJS
    depends_on:
      azurite: 
        condition: service_started # FIXME - MJS - service healthy
      mock-register: 
        condition: service_healthy
      mock-data-holder: 
        condition: service_healthy
      # mock-data-holder-energy: 
      #   condition: service_healthy

  getdatarecipients-integration-tests:
    container_name: getdatarecipients-integration-tests
    image: getdatarecipients-integration-tests
    build:
      context: .
      dockerfile: Dockerfile.get-data-recipients.integration-tests
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    volumes:
      - "./_temp/getdatarecipients-integration-tests/testresults:/testresults"
    depends_on:
      getdatarecipients: 
        condition: service_started # FIXME - MJS - service healthy


